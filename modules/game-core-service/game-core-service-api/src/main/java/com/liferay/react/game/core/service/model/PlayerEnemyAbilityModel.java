/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.react.game.core.service.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the PlayerEnemyAbility service. Represents a row in the &quot;ReactGame_PlayerEnemyAbility&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.liferay.react.game.core.service.model.impl.PlayerEnemyAbilityModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.liferay.react.game.core.service.model.impl.PlayerEnemyAbilityImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see PlayerEnemyAbility
 * @generated
 */
@ProviderType
public interface PlayerEnemyAbilityModel extends BaseModel<PlayerEnemyAbility> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a player enemy ability model instance should use the {@link PlayerEnemyAbility} interface instead.
	 */

	/**
	 * Returns the primary key of this player enemy ability.
	 *
	 * @return the primary key of this player enemy ability
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this player enemy ability.
	 *
	 * @param primaryKey the primary key of this player enemy ability
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this player enemy ability.
	 *
	 * @return the uuid of this player enemy ability
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this player enemy ability.
	 *
	 * @param uuid the uuid of this player enemy ability
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the player enemy ability ID of this player enemy ability.
	 *
	 * @return the player enemy ability ID of this player enemy ability
	 */
	public long getPlayerEnemyAbilityId();

	/**
	 * Sets the player enemy ability ID of this player enemy ability.
	 *
	 * @param playerEnemyAbilityId the player enemy ability ID of this player enemy ability
	 */
	public void setPlayerEnemyAbilityId(long playerEnemyAbilityId);

	/**
	 * Returns the enemy of this player enemy ability.
	 *
	 * @return the enemy of this player enemy ability
	 */
	public boolean getEnemy();

	/**
	 * Returns <code>true</code> if this player enemy ability is enemy.
	 *
	 * @return <code>true</code> if this player enemy ability is enemy; <code>false</code> otherwise
	 */
	public boolean isEnemy();

	/**
	 * Sets whether this player enemy ability is enemy.
	 *
	 * @param enemy the enemy of this player enemy ability
	 */
	public void setEnemy(boolean enemy);

	/**
	 * Returns the player or enemy ID of this player enemy ability.
	 *
	 * @return the player or enemy ID of this player enemy ability
	 */
	public long getPlayerOrEnemyId();

	/**
	 * Sets the player or enemy ID of this player enemy ability.
	 *
	 * @param playerOrEnemyId the player or enemy ID of this player enemy ability
	 */
	public void setPlayerOrEnemyId(long playerOrEnemyId);

	/**
	 * Returns the ability ID of this player enemy ability.
	 *
	 * @return the ability ID of this player enemy ability
	 */
	public long getAbilityId();

	/**
	 * Sets the ability ID of this player enemy ability.
	 *
	 * @param abilityId the ability ID of this player enemy ability
	 */
	public void setAbilityId(long abilityId);

	@Override
	public PlayerEnemyAbility cloneWithOriginalValues();

}