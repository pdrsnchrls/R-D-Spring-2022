/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.react.game.core.service.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Ability service. Represents a row in the &quot;ReactGame_Ability&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.liferay.react.game.core.service.model.impl.AbilityModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.liferay.react.game.core.service.model.impl.AbilityImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Ability
 * @generated
 */
@ProviderType
public interface AbilityModel extends BaseModel<Ability> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a ability model instance should use the {@link Ability} interface instead.
	 */

	/**
	 * Returns the primary key of this ability.
	 *
	 * @return the primary key of this ability
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this ability.
	 *
	 * @param primaryKey the primary key of this ability
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this ability.
	 *
	 * @return the uuid of this ability
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this ability.
	 *
	 * @param uuid the uuid of this ability
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the ability ID of this ability.
	 *
	 * @return the ability ID of this ability
	 */
	public long getAbilityId();

	/**
	 * Sets the ability ID of this ability.
	 *
	 * @param abilityId the ability ID of this ability
	 */
	public void setAbilityId(long abilityId);

	/**
	 * Returns the ability name of this ability.
	 *
	 * @return the ability name of this ability
	 */
	@AutoEscape
	public String getAbilityName();

	/**
	 * Sets the ability name of this ability.
	 *
	 * @param abilityName the ability name of this ability
	 */
	public void setAbilityName(String abilityName);

	/**
	 * Returns the healing of this ability.
	 *
	 * @return the healing of this ability
	 */
	public boolean getHealing();

	/**
	 * Returns <code>true</code> if this ability is healing.
	 *
	 * @return <code>true</code> if this ability is healing; <code>false</code> otherwise
	 */
	public boolean isHealing();

	/**
	 * Sets whether this ability is healing.
	 *
	 * @param healing the healing of this ability
	 */
	public void setHealing(boolean healing);

	/**
	 * Returns the hit points of this ability.
	 *
	 * @return the hit points of this ability
	 */
	public int getHitPoints();

	/**
	 * Sets the hit points of this ability.
	 *
	 * @param hitPoints the hit points of this ability
	 */
	public void setHitPoints(int hitPoints);

	@Override
	public Ability cloneWithOriginalValues();

}