/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.react.game.core.service.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Enemy service. Represents a row in the &quot;ReactGame_Enemy&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.liferay.react.game.core.service.model.impl.EnemyModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.liferay.react.game.core.service.model.impl.EnemyImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Enemy
 * @generated
 */
@ProviderType
public interface EnemyModel extends BaseModel<Enemy> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a enemy model instance should use the {@link Enemy} interface instead.
	 */

	/**
	 * Returns the primary key of this enemy.
	 *
	 * @return the primary key of this enemy
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this enemy.
	 *
	 * @param primaryKey the primary key of this enemy
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this enemy.
	 *
	 * @return the uuid of this enemy
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this enemy.
	 *
	 * @param uuid the uuid of this enemy
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the enemy ID of this enemy.
	 *
	 * @return the enemy ID of this enemy
	 */
	public long getEnemyId();

	/**
	 * Sets the enemy ID of this enemy.
	 *
	 * @param enemyId the enemy ID of this enemy
	 */
	public void setEnemyId(long enemyId);

	/**
	 * Returns the enemy name of this enemy.
	 *
	 * @return the enemy name of this enemy
	 */
	@AutoEscape
	public String getEnemyName();

	/**
	 * Sets the enemy name of this enemy.
	 *
	 * @param enemyName the enemy name of this enemy
	 */
	public void setEnemyName(String enemyName);

	/**
	 * Returns the level of this enemy.
	 *
	 * @return the level of this enemy
	 */
	public int getLevel();

	/**
	 * Sets the level of this enemy.
	 *
	 * @param level the level of this enemy
	 */
	public void setLevel(int level);

	/**
	 * Returns the hit points of this enemy.
	 *
	 * @return the hit points of this enemy
	 */
	public int getHitPoints();

	/**
	 * Sets the hit points of this enemy.
	 *
	 * @param hitPoints the hit points of this enemy
	 */
	public void setHitPoints(int hitPoints);

	/**
	 * Returns the xp drop of this enemy.
	 *
	 * @return the xp drop of this enemy
	 */
	public int getXpDrop();

	/**
	 * Sets the xp drop of this enemy.
	 *
	 * @param xpDrop the xp drop of this enemy
	 */
	public void setXpDrop(int xpDrop);

	/**
	 * Returns the image url of this enemy.
	 *
	 * @return the image url of this enemy
	 */
	@AutoEscape
	public String getImageURL();

	/**
	 * Sets the image url of this enemy.
	 *
	 * @param imageURL the image url of this enemy
	 */
	public void setImageURL(String imageURL);

	@Override
	public Enemy cloneWithOriginalValues();

}